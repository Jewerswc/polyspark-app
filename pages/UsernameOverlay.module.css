/* UsernameOverlay.module.css */

/* === Overlay & Card === */
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  opacity: 0;
  animation: fadeIn 300ms cubic-bezier(0, 0, 0.58, 1) forwards;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to   { opacity: 1; }
}

.card {
  background: #fff;
  border-radius: 8px;
  padding: 24px 24px 16px;
  max-width: 425px;
  width: 100%;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  border: solid 1px #F2F2F2;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
}

@media (max-width: 480px) {
  .card {
    max-width: 100%;
    margin: 0px;          /* give a little side-padding */
    padding: 24px;           /* tighter padding */
    border-radius: 0;        /* flush corners */
    height: 100%;            /* fill vertically if you want */
    box-shadow: none;        /* remove desktop shadow, if desired */
    justify-content: center;
  }
}

.mobileImage {
  display: none;
}

@media (max-width: 480px) {
  .mobileImage {
    display: block;
    width: 50px;
    height: 50px;
    border-radius: 10px;        /* adjust to your design */
    margin-bottom: 8px; /* center + spacing beneath */
  }
}

.headings {
  display: flex;            /* <-- make it a flex container */
  flex-direction: column;   /* stack its children vertically */
  gap: 4px;                /* now this will space out <h2> and <h3> */
  width: 100%;
  margin-bottom: 16px;
}

/* === Headings === */
.heading {
  font-family: cabin, sans-serif;
  font-size: 20px;
  font-weight: 700;
  text-align: center;
  line-height: 22.5px;
  color: #333333
}

.headingtwo {
  margin: 0;
  font-family: cabin, sans-serif;
  font-size: 16px;
  font-weight: 400;
  text-align: center;
  line-height: 1.25;
  color: #666666;
}

/* === Divider === */
.divider {
  border: none;
  height: 1px;
  width: 100%;
  background-color: #e0e0e0;
  margin: 0rem 0;
}


.inputWrapper {
  display: flex;
  width: 100%;
  margin-bottom: 1.5rem;
}

.usernameContainer {
  position: relative; /* for absolutely positioned icons */
  width: 100%;
}

.prefix {
  position: absolute;
  left: 0.5rem;
  top: 49%;
  transform: translateY(-50%);
  font-family:  'Gill Sans';
  font-size: 1rem;
  color: #8c8c8c;
  pointer-events: none;
  z-index: 1;
  align-items: center;
  line-height: 1.25;
}

/* Base input (unchanged) */
.inputWithPrefix {
  width: 100%;
  padding: 12px 12px;
  padding-left: 24px;
    font-size: 16px;
  border: 1px solid #cccccc;
  border-radius: 8px;
  outline: none;
  color: #585656;
  font-weight: 450;

  transition: border-color 0.2s ease;
  font-family: cabin;
}


.inputWithPrefix {
  width: 100%;
  padding: 12px 12px;
  padding-left: 24px;
    font-size: 16px;
  border: 1px solid #cccccc;
  border-radius: 8px;
  outline: none;
  color: #585656;
  font-weight: 450;

  transition: border-color 0.2s ease;
  font-family: cabin;
}


.inputWithPrefix:hover {
  background-color: #F2F2F2;
  /* Using border-color here since we have a transition on border-color */
  border-color: #F2F2F2;
}

/* Focused input (no status yet) */
.inputWithPrefix:focus {
  border-color: #0070f3;
}

/* When the username is AVAILABLE, turn border green: */
.inputAvailable {
  border-color: #28a745; /* green */
}

/* When the username is TAKEN, turn border orange/red: */
.inputTaken {
  border-color: #e55353; /* red/orange */
}

/* ========== Status Icon (checkmark / X / spinner) ========== */

.statusIcon {
  position: absolute;
  right: 0.75rem;   /* push a little left of the right padding */
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  display: flex;
  color: #e55353; 
  font-size: 12px;
  font-family: cabin;
  align-items: center;
  justify-content: center;
  z-index: 2;
}

.statusText {
  position: absolute;
  right: 0.75rem;   /* push a little left of the right padding */
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  display: flex;
  color: #e55353; 
  font-size: 12px;
  font-family: cabin;
  align-items: center;
  justify-content: center;
  z-index: 2;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to   { opacity: 1; }
}


/* Optional: spinner circle animation for 'checking' state */
.spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* === Continue Button === */
.button {
  width: 100%;
  padding: 12px 16px;
  font-size: 16px;
  font-weight: 700;
  color: #ffffff;
  background-color: #154FE3;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  margin-bottom: 8px;
  font-family: cabin, sans-serif;
  transition: background-color 0.2s ease, opacity 0.2s ease;
}

.button:hover:not([disabled]) {
  background-color: #005bb5;
}

.button:disabled {
  background-color: #C1C9E6;
  cursor: not-allowed;
  opacity: 0.6;
}

/* === Checkbox Section === */
.checkboxWrapper {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  margin-top: 16px;
  margin-bottom: 1.5rem;
  gap: 16px
}

/* 
  Make the label a flex container but do NOT allow it to wrap 
  (so the checkbox input stays on the same line as its text).
*/
.checkboxLabel {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
  font-size: 14px;
  font-family: cabin, sans-serif;
  color: #333333;
  font-weight: 500;
  /* remove any flex-wrap */
}

.checkboxLabeltwo {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
  font-size: 14px;
  font-family: cabin, sans-serif;
  color: #333333;
  font-weight: 500;
  align-items: center;
  /* remove any flex-wrap */
}

/* 
  The span holds both plain text and <a> links.
  It can wrap internally (i.e. its own text will break lines as needed),
  but it will never force the <input> onto another row.
*/
.checkboxText {
  flex: 1 1 auto;      /* let the text span grow/shrink */
  line-height: 1.3;     /* comfortable line-height for wrapping */
  word-break: break-word;/* if a very long URL/text, allow it to break */
  color: #333333
}

/* ===========
   CUSTOM CHECKBOX
   =========== */
/* 1) Remove default browser checkbox */
.checkbox {
  -webkit-appearance: none; /* Safari/WebKit */
  -moz-appearance: none;    /* Firefox */
  appearance: none;         /* modern browsers */

  width: 20px;
  height: 20px;

  border: 2px solid #cccccc;
  border-radius: 3px;
  background-color: white;

  position: relative;
  margin-top: 0.15rem; /* align visually with the text baseline */
  cursor: pointer;
  outline: none;
  transition: background-color 0.2s ease, border-color 0.2s ease;

  /* ensure the checkbox itself never shrinks or grows */
  flex: 0 0 auto;
}

/* 2) When checked, fill it with brand color */
.checkbox:checked {
  background-color: #154FE3;
  border-color: #154FE3;
}

/* 3) Draw a white checkmark via pseudo-element */
.checkbox:checked::after {
  content: "";
  position: absolute;
  top: 0.2rem;    /* tweak to center the tick */
  left: 0.35rem;  /* tweak to center the tick */
  width: 0.25rem; /* length of “leg” of the checkmark */
  height: 0.5rem; /* length of “arm” of the checkmark */
  border: solid white;
  border-width: 0 2px 2px 0; /* only draw the right-angle tick */
  transform: rotate(45deg);
}

/* 4) Hover & focus styling */
.checkbox:hover {
  background-color: #E6E6E6;
}

.checkbox:not(:checked):hover {
  background-color: #E6E6E6;   /* light gray on hover */
  border-color: #0D3AC2;       /* blue border on hover */
}

/* 2) Hover when checked (checked hover) */
.checkbox:checked:hover {
  background-color: #3A70F3;   /* darker blue when hovering over a checked box */
  border-color: #154FE3;       /* even darker border when hovering and checked */
}

.checkbox:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(0, 112, 243, 0.3);
}

/* === Link Styling === */
.link {
  color: #154FE3;
  text-decoration: none;
}

.link:hover {
  text-decoration: underline;
  color: #3A70F3
}

/* === Terms & Privacy (footer) === */
.footerLinks {
  margin-top: 16px;
  font-size: 14px;
  color: #999;
  font-family: cabin, sans-serif;
}

/* === Error text (if you ever need it) === */
.error {
  font-family: cabin, sans-serif;
  font-size: 14px;
  color: #666666;
}
